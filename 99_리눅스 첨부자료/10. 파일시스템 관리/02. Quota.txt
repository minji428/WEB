### Quota ###



	* 사용자별 공간 할당 ( Quota )

		- 파일시스템마다 사용자나 그룹이 생성할 수 있는 파일의
		  용량 및 개수를 제한하는 것
		  
		- 데이터의 저장공간은 무한하지 않기 때문에 일반 사용자가
		  임의로 서버의 자원을 모두 사용하는 것을 방지
		 
		- 용량부족으로 시스템 장애가 발생하는 일을 사전에 방지
	
	
	
	! 실습
	
		1) 스냅샷을 이용하여 디스크 추가 직후로 이동
			
		2) 파일시스템 생성 -> 마운트
		
		용량	파티션명	파일시스템명	마운트포인트
		1GB		/dev/sdb1		ext3		/USER_DIR1
		1GB		/dev/sdc1		ext4		/USER_DIR2
		1GB		/dev/sdd1		ext4		/GROUP_DIR1
		
		#fdisk /dev/sdb
		n
		p
		1
		enter
		enter
		w
		
		#fdisk /dev/sdc
		n
		p
		1
		enter
		enter
		w
		
		#fdisk /dev/sdd
		n
		p
		1
		enter
		enter
		w
		
		#fdisk -l						>> 확인
		
		
		#mkfs -t ext3 /dev/sdb1
		#mkfs -t ext4 /dev/sdc1
		#mkfs -t ext4 /dev/sdd1
		
		#mkdir /USER_DIR{1,2}
		#mkdir /GROUP_DIR1
		
		#mount /dev/sdb1 /USER_DIR1
		#mount /dev/sdc1 /USER_DIR2
		#mount /dev/sdd1 /GROUP_DIR1
		
		#df -h							>> 확인
		
		
		
		
		3) 쿼터를 사용하기 위해 /etc/fstab 옵션 추가
		
		#blkid						>> UUID확인
		
		
		ext3 사용자 - usrquota
		ext3 그룹  - grpquota
		ext4 사용자 - usrjquota=aquota.user,jqfmt=vfsv0
		ext4 그룹  - grpjquota=aquota.group,jqfmt=vfsv0
		#vi /etc/fstab
		-----------------------------------------------------
		하단에 추가
		UUID=[UUID] /USER_DIR1 ext3 defaults,usrquota 0 0 
		UUID=[UUID] /USER_DIR2 ext4 defaults,usrjquota=aquota.user,jqfmt=vfsv0 0 0 
		UUID=[UUID] /GROUP_DIR1 ext4 defaults,grpjquota=aquota.group,jqfmt=vfsv0 0 0 
		:wq!
		-------------------------------------------------------
		
		+@ ext4 파일시스템에서 쿼터를 사용할때 많은 옵션이 사용되는 이유는
		   쿼터가 ext3에 최적화 되어있어 ext4에서 적용시 추가 옵션이 사용이된다. 
		
		
		#mount		>> 파티션에 적용된 옵션 확인 ( 적용 x )
		
		
		>> 리부팅 하지 않아도 mount 적용 가능
		
		#mount -o remount /USER_DIR1			>> 재부팅한 결과(아무것도 안떠야 정상)
		#mount -o remount /USER_DIR2			>> 재부팅한 결과
		#mount -o remount /GROUP_DIR1			>> 재부팅한 결과
		#mount		>> 파티션에 적용된 옵션 확인 ( 적용 o )
	
	
		4) 쿼터 테스트를 위한 계정 추가
		
		계정명 : Q-USER1 , Q-USER2
		그룹  : Q-GROUP
		
		#useradd Q-USER1
		#passwd Q-USER1
		111
		111
		
		#useradd Q-USER2
		#passwd Q-USER2
		111
		111
		
		#groupadd Q-GROUP
		
		#useradd -g Q-GROUP Q-User3
		#passwd Q-User3
		111
		111
		
		#useradd -g Q-GROUP Q-User4
		#passwd Q-User4
		111
		111
		
	
		#chown Q-USER1 /USER_DIR1			>> 디렉터리 소유권 변경
		#chown Q-USER2 /USER_DIR2
		#chgrp Q-GROUP /GROUP_DIR1
		
		#chmod 770 /USER_DIR1				>> 권한 변경
		#chmod 770 /USER_DIR2
		#chmod 770 /GROUP_DIR1
	
		#ll /								>> 변경 확인
	
		5) 쿼터를 사용하기 위해 SELINUX 비활성

		#getenforce				>> SELINUX상태를 확인
		Enforcing				>> 활성화 상태
		
		1) 일시적
		#setenforce 0 			>> SELINUX 비활성화
		
		#getenforce				
		Permissive				>> 비활성화 상태
		
		
		+@ 영구적	(>>보류)
		
		SELINUX 

		- 리눅스 내장 보안 프로그램 
		- 설정하기가 매우 어렵다.
		- 활성화 되어있는 경우 작업의 범위가 매우 제한적
		- 비활성화하는 경우가 일반적
		
		#vi /etc/sysconfig/selinux
		--------------------------
		7line : SELINUX=Enforcing --> SELINUX=disabled 
		
		:wq!
		--------------------------
		
		다음번 부팅시 disabled로 변경됨

	
		6) 쿼터 시작
		
		
		# yum install -y quota	>> quota 명령어를 우선 설치
		
		- 쿼터 설정(DB)파일 생성
		
		#quotacheck [옵션] [파티션명]	>>쿼터설정파일을 생성하는 명령어
		
		[ 옵션 ]
		
		-u : USER
		-g : GROUP
		-a : ALL
		
	
		#ls -l /USER_DIR1			>>aquota.user파일 x
		#quotacheck -u /dev/sdb1	
		#ls -l /USER_DIR1			>>aquota.user파일 생성
		
		#ls -l /USER_DIR2			>>aquota.user파일 x
		#quotacheck -u /dev/sdc1	
		#ls -l /USER_DIR2			>>aquota.user파일 o
		
		#ls -l /GROUP_DIR1			>>aquota.group파일 x
		#quotacheck -g /dev/sdd1	
		#ls -l /GROUP_DIR1			>>aquota.group파일 o
		
		
		#quotaon /dev/sdb1			>>쿼터 시작
		#quotaon /dev/sdc1			>>쿼터 시작
		#quotaon /dev/sdd1			>>쿼터 시작

		7) 쿼터 제한 영역 설정
		
		#edquota -u Q-USER1 (용량 제한)
		----------------------------------------------------
		Disk quotas for user Q-USER1 (uid 913):
		Filesystem           blocks       soft       hard     inodes     soft     hard
		/dev/sdb1               4         +10M	   +20M        1           0       0
		
		:wq!
		---------------------------------------------------
	
	
		#edquota -u Q-USER2 (개수 제한)
		----------------------------------------------------
		Disk quotas for user Q-USER1 (uid 913):
		Filesystem           blocks       soft       hard     inodes     soft     hard
		/dev/sdc1               4         0	           0       1           10      15
		
		
		:wq!
		---------------------------------------------------
	
	
		#edquota -g Q-GROUP
		----------------------------------------------------
		Disk quotas for user Q-USER1 (uid 913):
		Filesystem           blocks       soft       hard     inodes     soft     hard
		/dev/sdd1               4          +10M	   +20M        1           10        15
		
		
		:wq!
		---------------------------------------------------
	
		
		blocks - 운영체제가 자동으로 계산 ( 용량 )
			
			soft - 사용자가 편집
				 - 사용자가 해당 공간에서 자유롭게 사용할 수 있는 용량
			
			hard - 사용자가 편집
				 - 사용자가 해당공간에서 사용할 수 있는 최대 용량

		inodes - 운영체제가 자동으로 계산 ( 파일의 개수 )
			
			soft - 사용자가 편집
				 - 사용자가 해당 공간에서 자유롭게 사용할 수 있는 파일의 개수
			
			hard - 사용자가 편집
				 - 사용자가 해당공간에서 사용할 수 있는 최대 파일의 개수
			 
		
		8) 유예기간(grace) 설정
		
		#edquota -t
		-----------------------------------------------------------------
		Grace period before enforcing soft limits for users:
		Time units may be: days, hours, minutes, or seconds
		Filesystem             Block grace period     Inode grace period
		/dev/sdb1                  1minutes                 7days
		/dev/sdc1                    7days               1minutes
		
		:wq!
		------------------------------------------------------------------

		
		#edquota -gt
		-----------------------------------------------------------------
		Grace period before enforcing soft limits for users:
		Time units may be: days, hours, minutes, or seconds
		Filesystem             Block grace period     Inode grace period
		/dev/sdd1                  1minutes                 1minutes
		
		:wq!
		------------------------------------------------------------------

		grace - soft limit을 초과하게 되면 유예기간에 돌입 ( 유예 기간 )
			  - 유예기간이 끝나는 시점에 사용불가
		
		
		#repquota /dev/sdb1						>> 설정 확인
		#repquota /dev/sdc1						>> 설정 확인
		#repquota -g /dev/sdd1					>> 설정 확인
	
	
		9) 테스트
		
		@root
		#watch -d -n 1 repquota /dev/sdb1	>> 실시간으로 보기
		
		
		@Q-USER1 (새 탭에서 로그인)
		
		1) 블록의 크기로 제한 테스트
		$cd /USER_DIR1
		$cp /boot/vm*	./file1			>> 대략 4M의 파일을 복사  (4) + root탭 확인
		$cp ./file1 ./file2				>> 대략 4M의 파일을 복사  (8)
		$cp ./file1 ./file3				>> 대략 4M의 파일을 복사  (12) , Soft limit

		$cp ./file1 ./file4				>> o
		$cp ./file1 ./file5				>> x ( hard limit 초과 )
		$ls -l                          >> file5의 용량이 기존 file1,2,3,4와 다름
		
		$rm -rf file{1..5}
		
		$cp /boot/vm*	./file1			>> 대략 4M의 파일을 복사  (4)
		$cp ./file1 ./file2				>> 대략 4M의 파일을 복사  (8)
		$cp ./file1 ./file3				>> 대략 4M의 파일을 복사  (12) , Soft limit
		
		------------ 유예기간 경과 후 (grace -> none ) --------------------
		
		$cp ./file1 ./file4				>> x
		$cp ./file1 ./file5				>> x 
		
		
		2) 아이노드의 개수로 제한 테스트
		$rm -rf file*
		$touch file{1..10}
		
		$touch file11			>> o
		$touch file12			>> o
		$touch file13			>> o
		$touch file14			>> o
		$touch file15			>> o
			
		
		
		@root
		#watch -d -n 1 repquota /dev/sdc1
		
		@Q-USER2
		
		1) 블록의 크기로 제한 테스트
		$cd /USER_DIR2
		$cp /boot/vm*	./file1			
		$cp ./file1 ./file2				
		$cp ./file1 ./file3				
		$cp ./file1 ./file4				
		$cp ./file1 ./file5				
		
		2) 아이노드의 개수로 제한 테스트
		$rm -rf file*
		$touch file{1..10}
		
		$touch file11			>> o
		$touch file12			>> o
		$touch file13			>> o
		$touch file14			>> o
		$touch file15			>> x
		
		$rm -rf file*
		$touch file{1..10}
		------------ 유예기간 경과 후 ( grace -> none ) --------------------
		$touch file11			>> x
		$touch file12			>> x
		$touch file13			>> x
		$touch file14			>> x
		$touch file15			>> x
		
		
		
		@root
		#watch -d -n 1 repquota -g /dev/sdd1
		
		@Q-USER3 , Q-USER4
 		
		$cd /GROUP_DIR1
		
		
		1) 블록의 용량으로 제한 테스트
		
		@Q-USER3		$cp /boot/vm*	./file1		>> o	
		@Q-USER4        $cp /boot/vm*   ./file2		>> o	
		@Q-USER3		$cp /boot/vm*	./file3     >> o	
		@Q-USER4        $cp /boot/vm*   ./file4     >> o	
		@Q-USER3		$cp /boot/vm*	./file5     >> x	
		@Q-USER4        $cp /boot/vm*   ./file6     >> x
		
		$rm -rf file*
		@Q-USER3		$cp /boot/vm*	./file1		>> o	
		@Q-USER4        $cp /boot/vm*   ./file2		>> o	
		@Q-USER3		$cp /boot/vm*	./file3     >> o  
		------------ 유예기간 경과 후 ( grace -> none ) --------------------
		@Q-USER3,@Q-USER4        $cp /boot/vm*   ./file4		>> x	
			
		$rm -rf file*
		
		
		2) 아이노드의 개수로 제한 테스트
		
		@Q-USER3
		$touch file{1..10}
		$touch file11			>> o
		$touch file12			>> o
		$touch file13			>> o
		$touch file14			>> o
		$touch file15			>> x
		
		@Q-USER4
		$touch file16			>> x
		$touch file17			>> x
		
		$rm -rf file*
		
		
		@Q-USER4
		$touch file{1..10}
		------------ 유예기간 경과 후 ( grace -> none ) --------------------
		@Q-USER3,@Q-USER4
		$touch file11			>> x
		$touch file12			>> x
		$touch file13			>> x
		$touch file14			>> x
		$touch file15			>> x
		
		