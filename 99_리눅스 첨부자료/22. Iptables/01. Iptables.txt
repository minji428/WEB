### Iptables ###



	* iptables 개요
	
		- 리눅스 서버를 보호하기 위해서 패킷 필터링을 통해 기본적인 방화벽을 구성할 수 있다.
		  
		- 커널의 IP 패킷 필터링 기능을 하는 Netfilter에 규칙을 설정하고 관리하는 도구가 iptables이다.
		  
			[ 패킷 필터링 ]
		
			네트워크를 통과하는 모든 패킷들은 헤더에 출발지와 목적지 어떤 프로토콜을 이용하는지에 관한 정보를 담고 있다.
			
				2계층 - MAC주소
				3계층 - IP주소		(주소)
				4계층 - PORT번호	(상세주소)
		
		- 패킷의 헤더정보를 확인하고 
				들어오는 패킷 ( INPUT   )과 	  >> INPUT 체인   : 호스트에 들어온 패킷이 통과하는곳
				나가는 패킷  ( OUTPUT  )과     >> OUTPUT 체인  : 나가는 패킷이 통과하는 곳
				통과하는 패킷 ( FORWARD )      >> FORWARD 체인 : 호스트가 목적이 아닌 다른 호스트로 전달되는 패킷이 통과하는 곳
		  등을 검사하여 허용 및 거부하는 기능을 한다.
		
		
		- 필터링 규칙에 맞는 패킷에 대한 처리를 하는데 대표적인 아규먼트는 아래와 같다.
		
			ACCEPT : 패킷을 받아들인다.
			DROP   : 패킷을 버린다. (접속 호스트에게 특정 메세지가 전송되지 않는다.)
			REJECT : 패킷을 버리고 거절 메세지를 전송한다. 
			LOG    : 로그를 출력한다. 
		
		
		- iptables 명령어 옵션
		
			-A	:	체인의 '마지막'에 규칙을 추가	
				#iptables -A INPUT ~~~
				
			-I	:	체인의 '처음'에 규칙을 추가
				#iptables -I INPUT ~~~
				
			-D	:	체인의 규칙을 삭제
				#iptables -D INPUT 1			>> INPUT체인의 첫번째 규칙을 제거
												>>룰셋 삭제시 넘버가 정렬이 되기 때문에 항상 확인
			-F	:	체인의 모든 규칙을 제거
				#iptables -F
				
			-P	:	체인의 정책을 변경
				#iptables -P INPUT DROP
				
			-L	:	규칙 리스트 출력 			>> 주로 nL과 (숫자로 표기) 같이 사용
				#iptables -nL
				
				#iptables -nL --line-numbers	 >> 룰셋의 번호까지 확인 , alias로 등록해서 사용하면 편리
				
			-R  :	새로운 규칙으로 대체
				#iptables -R INPUT 2 ~~~		>>INPUT체인의 2번째 규칙을 수정

		- 규칙
		
			-s 출발지				:	출발지 IP 주소/대역
			
			-d 목적지				:	목적지 IP 주소/대역
			
			--sport 포트번호		:	출발지 포트번호
			
			--dport 포트번호		:	목적지 포트번호
			
			-j	Target				:  규칙에 맞는 패킷을 어떻게 처리할지 명시 
			
			-p	프로토콜			:	프로토콜(icmp,udp,tcp,all,등..)
			
			-i 인터페이스 			:	입력 인터페이스(eth0 , bond0)
			
			-o 인터페이스			:	출력 인터페이스(eth0 , bond0)
			
			-m state --state 상태 	:  패킷 상태(ESTABLISHED,NEW,등..)
	

		- 방화벽 서비스 관련 명령어
		
			#service iptables stop			>> 서비스 정지
			#service iptables start			>> 서비스 시작
			#service iptables status		>> 서비스 상태 확인
			#service iptables save			>> 룰셋 저장
			#service iptables restart		>> 서비스 재시작
	
		- 룰셋은 처음부터 아래로 '순차적으로 적용되기 때문에 순서가 굉장히 중요'하다.
		  룰셋이 중복될 경우 처음의 룰셋 적용되는 순간 그 아래의 룰셋은 동작하지 않는다.
	   
		   예시 1)
		   INPUT  policy ( ACCEPT )
		   
		   1 icmp    DROP			>> 여기서 설정 적용
		   2 icmp	 REJECT		   >> 적용된 패킷은 아래 룰셋에 적용되지 x 
		   
		   예시 2)
		   1 tcp	50000 			ACCEPT	>> 여기서 설정 적용
		   2 tcp 	40000:55000 	DROP	>> 적용된 패킷은 아래 룰셋에 적용되지 x 
	   
	
	! 실습 (일반적으로는 '고급 보안이 포함된 window defence 방화벽'에서 설정)
	
	@ Server-A (X-Shell에서는 접속이 자주 끊기기때문에 VMWare에서 작업)
	
		#service iptables status  >> 방화벽의 상태 확인 (input, output, foreword chain)
		#iptables -F			  >> 기존 설정 제거
		#iptables -nL			  >> 변경된 설정 확인 (rule set 삭제)
	
	@Server-B
	
		#ping 100.100.100.100	>> o
		#ssh 100.100.100.100	>> o (Server-A로 접속)
	
	@Client-Linux
	
		#ping 100.100.100.100	>> o
		#ssh 100.100.100.100	>> o (Server-A로 접속)
	
	
	예시 1) icmp 패킷만 거부
	
		@Server-A 	
			
			#iptables -F         					>>기존 설정 제거
			#iptables -A INPUT -p icmp -j DROP		>>icmp거부
			#iptables -nL
			
		@Server-B
		
			#ping 100.100.100.100	>> x
			#ssh 100.100.100.100	>> o
			
		@Client-Linux
		
			#ping 100.100.100.100	>> x
			#ssh 100.100.100.100	>> o
	
	
	예시 2) 1번에서 추가)icmp , ssh서비스만 거부
	
		@Server-A
	
			#iptables -nL									
			#iptables -A INPUT -p tcp --dport 22 -j DROP	>>ssh서비스 거부
			#iptables -nL
					
		@Server-B
		
			#ping 100.100.100.100	>> x
			#ssh 100.100.100.100	>> x
			
		@Client-Linux
		
			#ping 100.100.100.100	>> x
			#ssh 100.100.100.100	>> x
		
		
	예시 3) icmp패킷 거부(REJECT)
	
		@Server-A
		
			#iptables -F							
			#iptables -A INPUT -p icmp -j REJECT	>> icmp만 거부
		
		@Server-B
		
			#ping 100.100.100.100	>> x     Port UnReachable
			#ssh 100.100.100.100	>> o
		
		@Client-Linux
		
			#ping 100.100.100.100	>> x	 Port UnReachable
			#ssh 100.100.100.100	>> o
	
	
	예시 4) 3번에서 추가) icmp패킷 , ssh서비스 거부(REJECT)
	
		@Server-A
		
			#iptables -nL									
			#iptables -A INPUT -p tcp --dport 22 -j REJECT	>>ssh거부
			#iptablse -nL									>>설정

		@Server-B
		
			#ping 100.100.100.100	>> x     Port UnReachable
			#ssh 100.100.100.100	>> x	 Connection Rufuse
		
		@Client-Linux
		
			#ping 100.100.100.100	>> x	 Port UnReachable
			#ssh 100.100.100.100	>> x	 Connection Rufuse	
		
	
	예시 5) 특정 IP와 PORT만 거부

		@Server-A 
		
			#iptables -F	
			#iptables -A INPUT -p icmp -s 100.100.100.200 -j DROP  >>출발지 주소가 100.100.100.200인 icmp 프로토콜 패킷을 거부
			#iptables -nL
			
		@Server-B
		
			#ping 100.100.100.100			>> x
			#ssh 100.100.100.100			>> o
		
		@Client-Linux
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> o
		
		
		@Server-A 
		
			#iptables -F	
			#iptables -A INPUT -p icmp -s 100.100.100.150 -j DROP
			#iptables -nL
			
		@Server-B
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> o
		
		@Client-Linux
		
			#ping 100.100.100.100			>> x
			#ssh 100.100.100.100			>> o
		
		
		@Server-A 
		
			#iptables -F
			#iptables -A INPUT -p tcp --dport 22 -s 100.100.100.200 -j DROP
			#iptables -nL
			
		@Server-B
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> x
		
		@Client-Linux
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> o		
			
			
		@Server-A 
		
			#iptables -F
			#iptables -A INPUT -p tcp --dport 22 -s 100.100.100.150 -j DROP
			#iptables -nL
			
		@Server-B
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> o
		
		@Client-Linux
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> x
	
	
	예시 6) 기본 INPUT 정책을 DROP으로 변경
	
		@Server-A
			#iptables -F					>> 기존 설정 제거
			#iptables -P INPUT DROP			>> 기존 정책(INPUT) DROP으로 설정
			#iptables -nL					>> 설정 확인

		@Server-B
		
			#ping 100.100.100.100			>> x
			#ssh 100.100.100.100			>> x 
		
		@Client-Linux 
		
			#ping 100.100.100.100			>> x
			#ssh 100.100.100.100			>> x
	
	
	예시 7) 모든 패킷 거부 , icmp프로토콜만 허가
	
		@Server-A
		
			#iptables -A INPUT -p icmp -j ACCEPT	>> icmp만 허가
			#iptable -nL

		@Server-B
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> x 
		
		@Client-Linux 
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> x

	
	예시 8) (예시7에 이어서) 모든 패킷 거부 , icmp프로토콜, ssh서비스만 허가

		@Server-A
		
			#iptable -nL										>>기존의 icmp설정 확인
			#iptabels -A INPUT	-p tcp --dport 22 -j ACCEPT		>>ssh 서비스 허용
			#iptables -nL
		
		@Server-B
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> o 
		
		@Client-Linux 
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> o


	예시 9) 특정 IP만 허용
	
		@Server-A
		
			#iptables -F									
			#iptables -A INPUT -s 100.100.100.150 -j ACCEPT	 >>특정ip만 허가
			#iptables -nL
		
		@Server-B
		
			#ping 100.100.100.100			>> x
			#ssh 100.100.100.100			>> x
		
		@Client-Linux
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> o
		
		
		
		@Server-A
			#iptables -F										>> 기존 룰셋 제거
			#iptables -A INPUT -s 100.100.100.200 -j ACCEPT	 	>>특정ip만 허가
			#iptables -nL
		
		@Server-B
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> o
		
		@Client-Linux 
		
			#ping 100.100.100.100			>> x
			#ssh 100.100.100.100			>> x
			
			
		@Server-A 
			
			#iptables -F									 >> 기존 룰셋 제거
			#iptables -A INPUT -s 100.100.100.0/24 -j ACCEPT >>특정 대역만 허가
			#iptables -nL
		
		@Server-B
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> o
		
		@Client-Linux
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> o
			
			
			
	예시 10) OUTPUT 정책 설정 추가
	
	- 지금까지는 INPUT정책에만 룰셋을 적용했지만, 통신은 양방향 통신이기 때문에 INPUT과 OUPUT을 모두 고려 한다.
	
	
		@Server-A
		
			#iptables -F
			#iptables -A INPUT -p icmp -j ACCETP
			#iptables - A INPUT	-p tcp --dport 22 -j ACCEPT
			
			#iptables -P OUTPUT DROP
			#iptables -nL
		
		@Server-B
		
			#ping 100.100.100.100			>> x
			#ssh 100.100.100.100			>> x
		
		@Client-Linux
		
			#ping 100.100.100.100			>> x
			#ssh 100.100.100.100			>> x
	
	
	
	예시 11) OUTPUT정책 icmp프로토콜 ACCEPT 룰셋 추가
	
		@Server-A
		
			#iptables -A OUTUT -p icmp -j ACCEPT	>>출력 icmp허용
			#iptables -nL
		
		@Server-B
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> x
		
		@Client-Linux
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> x
	
	
	예시 12)(예시11에 추가)OUTPUT정책 icmp프로토콜,SSH서비스 ACCEPT 룰셋 추가
	
		@Server-A
	
			#iptables -nL									>>기존의 icmp룰셋 확인
			#iptables -A OUPUT -p tcp --sport 22 -j ACCEPT  >>ssh서비스 허가
			#iptables -nL
	
		@Server-B
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> o
		
		@Client-Linux 
		
			#ping 100.100.100.100			>> o
			#ssh 100.100.100.100			>> o
	

	

	! 연습예제 
	
		- OUTPUT정책은 ACCEPT
		- 접속을 금지하는 예제의 INPUT 정책은 ACCEPT라고 가정
		- 접속을 금지하는 예제의 정책은 REJECT 사용대신 DROP
		- 접속을 허용하는 예제의 INPUT 정책은 DROP으로 가정 

		1) 출발지 ip가 100.100.100.150인 호스트의 모든 접속을 막아보시오.


		2) 출발지 ip가 100.100.100.0/24 대역의 텔넷 서비스를 금지하시오.


		3) 포트번호가 1023번 보다 작은 모든 포트를 거부하는 규칙을 추가하시오.

		(각 포트 번호는 검색해서 열고 닫으면 ok)
		
		4) ftp포트 제어포트를 열어보시오. (21)
		

		5) telenet 서비스를 방화벽에서 열어보시오. (23)

		
		6) 웹서버 방화벽을 열어보시오. (80)

			
		7) SSH 서비스 방화벽을 닫아보시오. (22)


	

	
	
	
	
	
	
	
	
	
	! 연습 예제 정답

		- OUTPUT정책은 ACCEPT
		- 접속을 금지하는 예제의 INPUT 정책은 ACCEPT라고 가정
		- 접속을 금지하는 예제의 정책은 REJECT 사용대신 DROP
		- 접속을 허용하는 예제의 INPUT 정책은 DROP으로 가정 
	
		1) 출발지 ip가 100.100.100.150인 호스트의 모든 접속을 막아보시오.

			# iptables -A INPUT -s 100.100.100.150 -j DROP


		2) 출발지 ip가 100.100.100.0/24 대역의 텔넷 서비스를 금지하시오.

			# iptables -A INPUT -p tcp --dport 23 -s 100.100.100.0/24 -j DROP


		3) 포트번호가 1023번 보다 작은 모든 포트를 거부하는 규칙을 추가하시오.

			# iptables -A INPUT -p tcp --dport :1023 -j DROP


		4) ftp포트 제어포트를 열어보시오.

			# iptables -A INPUT -p tcp --dport 21 -j ACCEPT


		5) telenet 서비스를 방화벽에서 열어보시오.

			# iptables -A INPUT -p tcp --dport 23 -j ACCEPT


		6) 웹서버 방화벽을 열어보시오.

			# iptables -A INPUT -p tcp --dport 80 -j ACCEPT


		7) SSH 서비스 방화벽을 닫아보시오.

			# iptables -A INPUT -p tcp --dport 22 -j DROP
	
	