### Bonding ###

	서버의 핵심 > 안전 **
			  퍼포먼스

	* Bonding
	
		- 네트워크 카드(NIC) 이중화 : 예비(백업용) NIC 준비
	
	
	! 실습
	
	1) 네트워크 카드 추가
	
	VMWare -> Server-A -> Settings -> Add -> Network Adaptor추가(NAT)
	
		네트워크 카드 추가 확인
		#ifconfig -a		>>  네트워크카드의 활성화 여부와 관계없이
							>>  모든 장치 확인 
							
		eth0
		eth1
	
	
	
	2) 인터페이스 설정 파일 수정 및 생성
	
	#vi /etc/sysconfig/network-scripts/ifcfg-eth0
	------------------------------------------------
	DEVICE=eth0
	TYPE=Ethernet
	ONBOOT=yes
	BOOTPROTO=none
	NM_CONTROLLED=no
	SLAVE=yes				>>  bonding 구성 멤버로 동작
	MASTER=bond0			>>  bonding 주체의 장치명
	
	:wq!
	--------------------------------------------------
	
	
	
	#vi /etc/sysconfig/network-scripts/ifcfg-eth1
	------------------------------------------------
	DEVICE=eth1
	TYPE=Ethernet
	ONBOOT=yes
	BOOTPROTO=none
	NM_CONTROLLED=no
	SLAVE=yes				>>  bonding 구성 멤버로 동작
	MASTER=bond0			>>  bonding 주체의 장치명
	
	:wq!
	--------------------------------------------------
	
	
	#vi /etc/sysconfig/network-scripts/ifcfg-bond0
	------------------------------------------------
	DEVICE=bond0
	TYPE=Ethernet
	ONBOOT=yes
	BOOTPROTO=static
	NM_CONTROLLED=no
	USERCTL=no							>>  일반유저가 컨트롤할수 없음 ( root권한필요 )
	
	IPADDR=100.100.100.110
	NETMASK=255.255.255.0
	GATEWAY=100.100.100.2
	DNS1=168.126.63.1					>> KT
	
	BONDING_MASTER=yes					>>  실제 본딩에 사용되는 장치(eht0, eth1은 구성만)
	BONDING_OPTS="mode=1 miimon=100"	>>  본딩 옵션과 모니터링 주기
	
	
										>> mode=1 (active-backup)
										일반 기업들이 많이 쓰고
										활성화되어있는 NIC에 문제 발생시
										예비 NIC로 변경되는 기능
										
										>> miimon=100 모니터링주기(ms)
	
	
	:wq!
	--------------------------------------------------
	
	
	
	
	3) /etc/modprobe.d/bonding.conf 파일 생성
	
	#vi /etc/modprobe.d/bonding.conf		>> 커널에게 전달할 본딩 설정을 저장하고 있는 파일
											>> 해당 디렉터리에 위치한 *.conf파일의 내용을 커널이 읽어들여
											>>  시스템에 기능을 추가한다.
	------------------------------------
	alias bond0 bonding						>> 본딩 모듈의 이름이 bonding이지만
											>> bond0이라는 이름으로 사용하기 위해서 alias를 사용
	options bond0 mode=1 miimon=100			>> ifcfg-bond0파일에 추가한 옵션과 동일
											>> 둘중에 하나의 파일에만 작성해도 옵션은 적용된다.
	
	:wq!
	-----------------------------------
	
	
	
	4) 커널에 본딩 기능 추가
	
	#modprobe bond0					>> 커널에 기능을 추가
									>> 원격에서 작업할 시에 연결이 해제
	
	#lsmod | grep "bonding"			>> bonding기능 추가 확인
	
	
	
	
	5) 네트워크 재시작 혹은 재부팅
	#service network restart  
	
	or
	
	#reboot
	
	Xshell >> 새로만들기 >> 호스트(100.100.100.110) >> 종료 후, 재실행하여 새세션으로 root 연결
	
	
	
	6) 설정 확인
	
		 #ifconfig		>> eth0 , eth1 ,bond0 확인
						>> eth0 , eth1에는 주소(x) , bond0에 주소(O)
		
		
		 #cat /proc/net/bonding/bond0
		
			Bonding Mode : fault-tolerance ( active-backup )	>> mode=1 장애 대비
			
			Currently Active Slave: eth0		>>  현재 활성화 되어있는 장치명
	
			MII status : up						>>  모니터링 상태
			MII Polling Interval (ms):100		>>  모니터링 주기

			Slave Interface						>>  본딩을 구성한 실제 장치들의 상태 확인
			
			Ex)
			Slave Interface : eth0
			Slave Interface : eth1
			
			Link Failure Count					>>  각 장치의 링크가 비활성화 된 횟수
	
	
	
	7) 절체 테스트
	
	@(vmware) Server-A  root
	#ping 8.8.8.8									>> 실시간 통신 테스트
	
	@(Xshell) Server-A root
	#watch -d -n 0.1 "cat /proc/net/bonding/bond0"	>> 실시간 확인
	
	
	Vmware 하단에 네트워크 어댑터icon을 이용해서 각각(Disconnet, connect) 테스트
	
	+@실무에서는 랜선을 번갈아가면서  랜카드의 포트와 탈부착
	
